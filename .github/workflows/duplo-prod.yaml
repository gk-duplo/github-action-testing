name: Build-And-Deploy-Production
on:
  workflow_dispatch:
    branches:
      - main
env:
  duplo_host: https://azibo.duplocloud.net
  duplo_token: "${{ secrets.DUPLO_TOKEN }}"
  allowed_users: "${{secrets.PROD_DEPLOYMENT_APPOVERS}}"
  IMAGE_NAME: test-service
  TENANT_NAME: dev01

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: Development
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install pycodestyle
      - name: python linting
        run: |
          pycodestyle . --exclude=venv,.aws-sam --max-line-length=200 > pycodestyle_output.txt && echo -e "\033[32mLint Checking Passed\033[0m"
          if [ -s pycodestyle_output.txt ]; then
              echo "Pycodestyle errors found:"
              cat pycodestyle_output.txt
              exit 1
          fi
      - name: python unit tests
        run: |
          python test_calculator.py
      - name: Get AWS credentials
        run: |
          echo "Getting AWS credentials"
      - name: Login to Amazon ECR
        run: |
          echo "Log in to Amazon ECR"
      - name: Docker Build and Push
        run: |
          echo "Building Image and Pushing image to ECR"
  deploy:
    needs:
      - build
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Get AWS credentials
        uses: duplocloud/ghactions-aws-jit@master
        with:
          admin: true
      - name: Copy infra code form s3
        run: |
          echo "Copy from s3"
      - name: Apply Infra Changes 
        run: |
         echo "Run Terraform"
      - name: Deploy to DuploCloud
        run: |
          echo "Deploying Image to duplocloud"
      - name: Integration testing
        run: |
          echo "Integration Testing"
  release:
    runs-on: ubuntu-latest
    name: Release
    needs:
      - deploy
    concurrency: release
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Python Semantic Release
        uses: python-semantic-release/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
# Imp links:
# https://stackoverflow.com/questions/46340474/set-a-default-reviewer
# https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners
# https://dennessphillip.medium.com/default-reviewers-for-pull-requests-7e68ae1a0ed9

# for pull request details
# https://stackoverflow.com/questions/59077079/how-to-get-pull-request-number-within-github-actions-workflow
